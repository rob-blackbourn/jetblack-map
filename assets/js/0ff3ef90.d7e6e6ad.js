"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[807],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return f}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i=r.createContext({}),s=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=s(e.components);return r.createElement(i.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),p=s(t),f=o,m=p["".concat(i,".").concat(f)]||p[f]||d[f]||a;return t?r.createElement(m,l(l({ref:n},c),{},{components:t})):r.createElement(m,l({ref:n},c))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,l=new Array(a);l[0]=p;var u={};for(var i in n)hasOwnProperty.call(n,i)&&(u[i]=n[i]);u.originalType=e,u.mdxType="string"==typeof e?e:o,l[1]=u;for(var s=2;s<a;s++)l[s]=t[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},2425:function(e,n,t){t.d(n,{Z:function(){return l}});var r=t(7294),o=t(6010),a="tabItem__kUE";function l(e){var n=e.children,t=e.hidden,l=e.className;return r.createElement("div",{role:"tabpanel",className:(0,o.Z)(a,l),hidden:t},n)}},7986:function(e,n,t){t.d(n,{Z:function(){return f}});var r=t(7462),o=t(7294),a=t(6010),l=t(2389),u=t(2398),i=t(4345),s=t(5944),c="tabList_fbd4",d="tabItem_v5XY";function p(e){var n,t,l=e.lazy,p=e.block,f=e.defaultValue,m=e.values,b=e.groupId,h=e.className,v=o.Children.map(e.children,(function(e){if((0,o.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),y=null!=m?m:v.map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes}})),g=(0,u.l)(y,(function(e,n){return e.value===n.value}));if(g.length>0)throw new Error('Docusaurus error: Duplicate values "'+g.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var k=null===f?f:null!=(n=null!=f?f:null==(t=v.find((function(e){return e.props.default})))?void 0:t.props.value)?n:v[0].props.value;if(null!==k&&!y.some((function(e){return e.value===k})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+y.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var O=(0,i.U)(),j=O.tabGroupChoices,S=O.setTabGroupChoices,E=(0,o.useState)(k),w=E[0],T=E[1],C=[],N=(0,s.o5)().blockElementScrollPositionUntilNextRender;if(null!=b){var Z=j[b];null!=Z&&Z!==w&&y.some((function(e){return e.value===Z}))&&T(Z)}var D=function(e){var n=e.currentTarget,t=C.indexOf(n),r=y[t].value;r!==w&&(N(n),T(r),null!=b&&S(b,String(r)))},x=function(e){var n,t=null;switch(e.key){case"ArrowRight":var r,o=C.indexOf(e.currentTarget)+1;t=null!=(r=C[o])?r:C[0];break;case"ArrowLeft":var a,l=C.indexOf(e.currentTarget)-1;t=null!=(a=C[l])?a:C[C.length-1]}null==(n=t)||n.focus()};return o.createElement("div",{className:(0,a.Z)("tabs-container",c)},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":p},h)},y.map((function(e){var n=e.value,t=e.label,l=e.attributes;return o.createElement("li",(0,r.Z)({role:"tab",tabIndex:w===n?0:-1,"aria-selected":w===n,key:n,ref:function(e){return C.push(e)},onKeyDown:x,onFocus:D,onClick:D},l,{className:(0,a.Z)("tabs__item",d,null==l?void 0:l.className,{"tabs__item--active":w===n})}),null!=t?t:n)}))),l?(0,o.cloneElement)(v.filter((function(e){return e.props.value===w}))[0],{className:"margin-top--md"}):o.createElement("div",{className:"margin-top--md"},v.map((function(e,n){return(0,o.cloneElement)(e,{key:n,hidden:e.props.value!==w})}))))}function f(e){var n=(0,l.Z)();return o.createElement(p,(0,r.Z)({key:String(n)},e))}},3930:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return c},default:function(){return b},frontMatter:function(){return s},metadata:function(){return d},toc:function(){return f}});var r=t(7462),o=t(3366),a=(t(7294),t(3905)),l=t(7986),u=t(2425),i=["components"],s={sidebar_position:8},c="GeoJSON Loader",d={unversionedId:"tutorial/geojson-loader",id:"tutorial/geojson-loader",title:"GeoJSON Loader",description:"The data can also be loaded dynamically.",source:"@site/docs/tutorial/geojson-loader.md",sourceDirName:"tutorial",slug:"/tutorial/geojson-loader",permalink:"/jetblack-map/docs/tutorial/geojson-loader",draft:!1,editUrl:"https://github.com/rob-blackbourn/jetblack-map/tree/main/website/docs/tutorial/geojson-loader.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"GeoJSON Layer",permalink:"/jetblack-map/docs/tutorial/geojson-layer"},next:{title:"Components",permalink:"/jetblack-map/docs/category/components"}},p={},f=[],m={toc:f};function b(e){var n=e.components,t=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"geojson-loader"},"GeoJSON Loader"),(0,a.kt)("p",null,"The data can also be loaded dynamically."),(0,a.kt)(l.Z,{mdxType:"Tabs"},(0,a.kt)(u.Z,{value:"js",label:"JS",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"import React, { useEffect, useRef, useState } from 'react'\n\nimport {\n  GeoJSONLayer,\n  Map,\n  useClick,\n  useDrag,\n  useZoom,\n} from '@jetblack/maps'\n\nexport default function App() {\n  const [data, setData] = useState({})\n\n  const ref = useRef(null)\n\n  const [zoom, setZoom] = useZoom({ ref, defaultZoom: 6 })\n  const [center, setCenter] = useDrag({\n    ref,\n    zoom,\n    tileWidth: 256,\n    tileHeight: 256,\n    defaultCenter: GREENWICH_OBSERVATORY,\n  })\n\n  useClick({\n    ref,\n    center,\n    zoom,\n    tileWidth: 256,\n    tileHeight: 256,\n    onClick: (coordinate, point) => {\n      console.log('click', { coordinate, point })\n    },\n    onDoubleClick: (coordinate, point) => {\n      setCenter(coordinate)\n      setZoom(zoom + 1)\n    },\n  })\n\n  useEffect(() => {\n    fetch(\n      'https://raw.githubusercontent.com/isellsoap/deutschlandGeoJSON/main/2_bundeslaender/4_niedrig.geo.json'\n    )\n      .then(response => response.json())\n      .then(data => setData(data))\n  }, [])\n\n  const handleRequestFeatureStyle = (feature, state) => {\n    if (state.mouseOver) {\n      return {\n        fill: '#93c0d099',\n        strokeWidth: '2',\n        stroke: 'white',\n        opacity: 0.5,\n      }\n    } else {\n      return {\n        fill: '#d4e6ec99',\n        strokeWidth: '1',\n        stroke: 'white',\n        r: '20',\n        opacity: 0.3,\n      }\n    }\n  }\n\n  return (\n    <Map ref={ref} center={center} zoom={zoom} {...args}>\n      <GeoJSONLayer\n        data={data}\n        requestFeatureStyle={handleRequestFeatureStyle}\n        renderPopup={handleRenderFeature}\n      />\n    </Map>\n  )\n}\n"))),(0,a.kt)(u.Z,{value:"ts",label:"TS",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"import React, { SVGProps, useEffect, useRef, useState } from 'react'\n\nimport { Feature } from 'geojson'\n\nimport {\n  Coordinate,\n  FeatureState,\n  GeoJSONLayer,\n  Map,\n  Point,\n  useClick,\n  useDrag,\n  useZoom,\n} from '@jetblack/maps'\n\nexport default function App() {\n  const [data, setData] = useState<Feature>({} as Feature)\n\n  const ref = useRef<HTMLDivElement>(null)\n\n  const [zoom, setZoom] = useZoom({ ref, defaultZoom: 6 })\n  const [center, setCenter] = useDrag({\n    ref,\n    zoom,\n    tileWidth: 256,\n    tileHeight: 256,\n    defaultCenter: GREENWICH_OBSERVATORY,\n  })\n\n  useClick({\n    ref,\n    center,\n    zoom,\n    tileWidth: 256,\n    tileHeight: 256,\n    onClick: (coordinate: Coordinate, point: Point) => {\n      console.log('click', { coordinate, point })\n    },\n    onDoubleClick: (coordinate: Coordinate, point: Point) => {\n      setCenter(coordinate)\n      setZoom(zoom + 1)\n    },\n  })\n\n  useEffect(() => {\n    fetch(\n      'https://raw.githubusercontent.com/isellsoap/deutschlandGeoJSON/main/2_bundeslaender/4_niedrig.geo.json'\n    )\n      .then(response => response.json())\n      .then(data => setData(data))\n  }, [])\n\n  const handleRequestFeatureStyle = (\n    feature: Feature,\n    state: FeatureState\n  ): SVGProps<SVGAElement> | null => {\n    if (state.mouseOver) {\n      return {\n        fill: '#93c0d099',\n        strokeWidth: '2',\n        stroke: 'white',\n        opacity: 0.5,\n      }\n    } else {\n      return {\n        fill: '#d4e6ec99',\n        strokeWidth: '1',\n        stroke: 'white',\n        r: '20',\n        opacity: 0.3,\n      }\n    }\n  }\n\n  return (\n    <Map ref={ref} center={center} zoom={zoom} {...args}>\n      <GeoJSONLayer\n        data={data}\n        requestFeatureStyle={handleRequestFeatureStyle}\n        renderPopup={handleRenderFeature}\n      />\n    </Map>\n  )\n}\n")))))}b.isMDXComponent=!0}}]);