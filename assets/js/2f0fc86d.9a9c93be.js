"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1058],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return f}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=r.createContext({}),s=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=s(e.components);return r.createElement(i.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),d=s(t),f=a,m=d["".concat(i,".").concat(f)]||d[f]||p[f]||o;return t?r.createElement(m,l(l({ref:n},c),{},{components:t})):r.createElement(m,l({ref:n},c))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=d;var u={};for(var i in n)hasOwnProperty.call(n,i)&&(u[i]=n[i]);u.originalType=e,u.mdxType="string"==typeof e?e:a,l[1]=u;for(var s=2;s<o;s++)l[s]=t[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},2425:function(e,n,t){t.d(n,{Z:function(){return l}});var r=t(7294),a=t(6010),o="tabItem__kUE";function l(e){var n=e.children,t=e.hidden,l=e.className;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(o,l),hidden:t},n)}},7986:function(e,n,t){t.d(n,{Z:function(){return f}});var r=t(7462),a=t(7294),o=t(6010),l=t(2389),u=t(2398),i=t(4345),s=t(5944),c="tabList_fbd4",p="tabItem_v5XY";function d(e){var n,t,l=e.lazy,d=e.block,f=e.defaultValue,m=e.values,y=e.groupId,b=e.className,v=a.Children.map(e.children,(function(e){if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),h=null!=m?m:v.map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes}})),g=(0,u.l)(h,(function(e,n){return e.value===n.value}));if(g.length>0)throw new Error('Docusaurus error: Duplicate values "'+g.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var k=null===f?f:null!=(n=null!=f?f:null==(t=v.find((function(e){return e.props.default})))?void 0:t.props.value)?n:v[0].props.value;if(null!==k&&!h.some((function(e){return e.value===k})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+h.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var O=(0,i.U)(),j=O.tabGroupChoices,w=O.setTabGroupChoices,T=(0,a.useState)(k),N=T[0],S=T[1],E=[],F=(0,s.o5)().blockElementScrollPositionUntilNextRender;if(null!=y){var x=j[y];null!=x&&x!==N&&h.some((function(e){return e.value===x}))&&S(x)}var C=function(e){var n=e.currentTarget,t=E.indexOf(n),r=h[t].value;r!==N&&(F(n),S(r),null!=y&&w(y,String(r)))},P=function(e){var n,t=null;switch(e.key){case"ArrowRight":var r,a=E.indexOf(e.currentTarget)+1;t=null!=(r=E[a])?r:E[0];break;case"ArrowLeft":var o,l=E.indexOf(e.currentTarget)-1;t=null!=(o=E[l])?o:E[E.length-1]}null==(n=t)||n.focus()};return a.createElement("div",{className:(0,o.Z)("tabs-container",c)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":d},b)},h.map((function(e){var n=e.value,t=e.label,l=e.attributes;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:N===n?0:-1,"aria-selected":N===n,key:n,ref:function(e){return E.push(e)},onKeyDown:P,onFocus:C,onClick:C},l,{className:(0,o.Z)("tabs__item",p,null==l?void 0:l.className,{"tabs__item--active":N===n})}),null!=t?t:n)}))),l?(0,a.cloneElement)(v.filter((function(e){return e.props.value===N}))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},v.map((function(e,n){return(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==N})}))))}function f(e){var n=(0,l.Z)();return a.createElement(d,(0,r.Z)({key:String(n)},e))}},5563:function(e,n,t){t.r(n),t.d(n,{assets:function(){return d},contentTitle:function(){return c},default:function(){return y},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return f}});var r=t(7462),a=t(3366),o=(t(7294),t(3905)),l=t(7986),u=t(2425),i=["components"],s={sidebar_position:7},c="GeoJSON Layer",p={unversionedId:"tutorial/geojson-layer",id:"tutorial/geojson-layer",title:"GeoJSON Layer",description:"The 'GeoJSONLayer' can display data supplied with that format.",source:"@site/docs/tutorial/geojson-layer.md",sourceDirName:"tutorial",slug:"/tutorial/geojson-layer",permalink:"/jetblack-map/docs/tutorial/geojson-layer",draft:!1,editUrl:"https://github.com/rob-blackbourn/jetblack-map/tree/main/website/docs/tutorial/geojson-layer.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"Interaction",permalink:"/jetblack-map/docs/tutorial/interaction"},next:{title:"GeoJSON Loader",permalink:"/jetblack-map/docs/tutorial/geojson-loader"}},d={},f=[],m={toc:f};function y(e){var n=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"geojson-layer"},"GeoJSON Layer"),(0,o.kt)("p",null,"The 'GeoJSONLayer' can display data supplied with that format."),(0,o.kt)("p",null,"For use with typescript the ",(0,o.kt)("inlineCode",{parentName:"p"},"@types/geojson")," library can be installed as a\ndev dependency."),(0,o.kt)("p",null,"The data can be supplied directly."),(0,o.kt)(l.Z,{mdxType:"Tabs"},(0,o.kt)(u.Z,{value:"js",label:"JS",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import { Map } from '@jetblack/map'\nimport { GeoJSONLayer } from '@jetblack/map-geojson'\n\nexport default function App() {\n  const data = {\n    type: 'FeatureCollection',\n    features: [\n      {\n        type: 'Feature',\n        geometry: {\n          type: 'Point',\n          coordinates: [-0.0005261695762532147, 51.47684676353231],\n        },\n        properties: { name: 'Greenwich Observatory' },\n      },\n      {\n        type: 'Feature',\n        geometry: {\n          type: 'MultiPoint',\n          coordinates: [\n            [2.3742684290761105, 48.86380120851702],\n            [-1.5517871865064765, 47.246730628236755],\n            [1.4460149695779017, 43.606797136829464],\n            [3.8655608722043815, 43.59577745327528],\n            [5.341636045504812, 43.30855735318184],\n            [4.839466141186111, 45.77013358229793],\n          ],\n        },\n        properties: { name: 'French Cities' },\n      },\n    ],\n  }\n\n  const handleRequestFeatureStyle = (feature) => {\n    if (feature.properties.name === 'French Cities') {\n      return {\n        fill: '#93c0d099',\n        strokeWidth: '2',\n        stroke: 'red',\n        r: '15',\n      }\n    } else {\n      return null\n    }\n  }\n\n  return (\n    <Map ref={ref} center={center} zoom={zoom} {...args}>\n      <GeoJSONLayer\n        data={data}\n        requestFeatureStyle={handleRequestFeatureStyle}\n      />\n    </Map>\n  )\n}\n"))),(0,o.kt)(u.Z,{value:"ts",label:"TS",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { Feature, FeatureCollection } from 'geojson'\n\nimport {\n  Coordinate,\n  Map,\n} from '@jetblack/map'\nimport { GeoJSONLayer } from '@jetblack/map-geojson'\n\nexport default function App() {\n  const data: FeatureCollection = {\n    type: 'FeatureCollection',\n    features: [\n      {\n        type: 'Feature',\n        geometry: {\n          type: 'Point',\n          coordinates: [-0.0005261695762532147, 51.47684676353231],\n        },\n        properties: { name: 'Greenwich Observatory' },\n      },\n      {\n        type: 'Feature',\n        geometry: {\n          type: 'MultiPoint',\n          coordinates: [\n            [2.3742684290761105, 48.86380120851702],\n            [-1.5517871865064765, 47.246730628236755],\n            [1.4460149695779017, 43.606797136829464],\n            [3.8655608722043815, 43.59577745327528],\n            [5.341636045504812, 43.30855735318184],\n            [4.839466141186111, 45.77013358229793],\n          ],\n        },\n        properties: { name: 'French Cities' },\n      },\n    ],\n  }\n\n  const handleRequestFeatureStyle = (\n    feature: Feature\n  ): SVGProps<SVGElement> | null => {\n    if (feature.properties.name === 'French Cities') {\n      return {\n        fill: '#93c0d099',\n        strokeWidth: '2',\n        stroke: 'red',\n        r: '15',\n      }\n    } else {\n      return null\n    }\n  }\n\n  return (\n    <Map ref={ref} center={center} zoom={zoom} {...args}>\n      <GeoJSONLayer\n        data={data}\n        requestFeatureStyle={handleRequestFeatureStyle}\n      />\n    </Map>\n  )\n}\n")))))}y.isMDXComponent=!0}}]);